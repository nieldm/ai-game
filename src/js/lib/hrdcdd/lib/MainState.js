// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Phaser', 'Kinematic', 'Player', 'WayPointTarget', 'Path'], function(Phaser, Kinematic, Player, WayPointTarget, Path) {
    var MainState;
    MainState = (function(_super) {
      __extends(MainState, _super);

      function MainState() {
        MainState.__super__.constructor.apply(this, arguments);
      }

      MainState.prototype.preload = function() {
        this.game.load.image('star', 'assets/star.png');
        this.game.load.spritesheet('dude', 'assets/dude.png', 32, 48);
        this.game.load.spritesheet('baddie', 'assets/baddie.png', 32, 32);
        this.drawer = this.game.add.graphics(0, 0);
        this.path = new Path(this.game, this.drawer);
        return this.path.points = this.path.make(0, 400, 50);
      };

      MainState.prototype.create = function() {
        this.game.stage.backgroundColor = '#124184';
        if (this.game.scaleToFit) {
          this.game.stage.scaleMode = Phaser.StageScaleMode.SHOW_ALL;
          this.game.stage.scale.setShowAll();
          this.game.stage.scale.refresh();
        }
        this.path.create();
        this.player = new Player(this.game, 200, 200, 'baddie');
        this.player.animations.add('left', [0, 1], 10, true);
        this.player.animations.add('right', [2, 3], 10, true);
        this.game.add.existing(this.player);
        this.dude = new Kinematic(this.game, 400, 400, 'dude', 1, 'arriveDyn', [
          {
            position: 'left',
            lineColor: 0x00FF00
          }
        ]);
        this.dude.setTarget(this.wpTarget);
        this.other_dude = new Kinematic(this.game, 400, 400, 'dude', 1, 'pursueDel', [
          {
            position: 'right',
            lineColor: 0x0000FF
          }
        ]);
        this.other_dude.setTarget(this.dude);
        this.follow_dude = new Kinematic(this.game, 200, 400, 'dude', 1, 'followPath', [
          {
            position: 'right',
            lineColor: 0x0000FF
          }
        ]);
        this.follow_dude.setPath(this.path);
        return this.follow_dude.create();
      };

      MainState.prototype.update = function() {
        return this.path.update();
      };

      MainState.prototype.render = function() {};

      return MainState;

    })(Phaser.State);
    return MainState;
  });

}).call(this);
